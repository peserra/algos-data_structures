Descrição

Leia N números inteiros e construa uma árvore binária de busca. 

Depois, mostre na tela todos os nós folhas da árvore binária de busca em ordem crescente.

// Recebe um ponteiro para uma arvore.
// Imprime as folhas da arvore "em ordem".
void imprimirFolhas (Arvore *arv);


Entrada

A entrada consiste de apenas um caso de teste contendo 2 linhas.

A primeira linha contém um número inteiro N representando a quantidade de nós da árvore.

Na segunda linha, haverá N valores inteiros separados por um espaço em branco cada, representando cada uma das chaves a serem inseridas na árvore binária de busca.

Restrições:

• 1 <= N <= 500

int main () {
    int n, i, x;
    scanf ("%d", &n);
    Arvore *arv = criaArvoreVazia ();
    for (i = 0; i < n; i++) {
        scanf ("%d", &x);
        inserir (arv, x);
    }
    imprimir (arv);
    imprimirFolhas (arv);
    liberaArvore (arv);
    return 0;
}


Saída

Na primeira linha, o seu programa deve imprimir as chaves da árvore "em ordem".

Na segunda linha, você deve imprimir a mensagem "Folhas: A B C ..." com as chaves das folhas em ordem crescente.

Nas linhas seguintes, deve imprimir uma mensagem "libera: X" após liberar cada item alocado na árvore, onde X é o valor da chave.
Dica: Para liberar os itens da árvore, use a visita Pós-Ordem. 



Exemplo 

Entrada: 
7
3 2 5 1 4 6 7

Saída:
1 2 3 4 5 6 7
Folhas: 1 4 7
libera: 1
libera: 2
libera: 4
libera: 7
libera: 6
libera: 5
libera: 3

