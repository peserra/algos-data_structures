Descrição

Implemente o algoritmo de ordenação por particionamento conhecido como Quick Sort (*) e imprima a "situação" do vetor após cada particionamento. 
(*) Neste exercício, considere a versão "fixa", que escolhe sempre o último elemento como pivô.

Entrada

O programa terá apenas um caso de teste.

A primeira linha do caso de teste é um número inteiro N, 0 <= N <= 10000. 

Na linha seguinte, serão dados N inteiros separados por um espaço em branco cada.



Saída

O programa gera como saída várias linhas.

Após cada chamada do particiona(), imprimir uma linha com o índice do pivô e a chave.
Na linha seguinte, imprimir o conteúdo do trecho do vetor.

Finalmente, a última linha imprime o vetor completo após a ordenação. 

Quebre uma linha ao final.



Exemplo1 

Entrada: 
10
9 65 12 7 21 5 7 46 52 10

Saída:
Pivo: [4] 10
9 7 5 7 10 12 65 46 52 21
Pivo: [2] 7
7 5 7 9
Pivo: [0] 5
5 7
Pivo: [6] 21
12 21 46 52 65
Pivo: [9] 65
46 52 65
Pivo: [8] 52
46 52
5 7 7 9 10 12 21 46 52 65

