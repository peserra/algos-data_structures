Descrição

Implemente uma estrutura de dados do tipo pilha dinâmica que armazenará números inteiros
Entrada

A primeira linha da entrada consiste de uma sucessão indefinida de linhas no seguinte formato de comandos sobre a pilha:

Comando     Comportamento
 E valor           Empilha o valor na pilha, onde valor será um número natural.
 D                    Desempilha um valor da pilha.
 M                   Exibe cada item da pilha do topo para a base. 

Caso a operação tente desempilhar um elemento de uma pilha vazia ignore a ação.

Dica: Para ler os dados de entrada, você pode seguir o seguinte exemplo abaixo... note que você deve remover os PRINTFs para implementar o seu código para resolver este exercício.

#include <stdio.h>
int main () {
    char op;
    int x;
    while (scanf (" %c", &op) != EOF) {  // leitura com espaco em branco antes de %c
        switch (op) {
            case 'E': scanf ("%d", &x);
                      printf ("[%c %d]\n", op, x);
                      break;
            case 'D': printf ("[%c]\n", op);
                      break;
            case 'M': printf ("[%c]\n", op);
                      break;
        }
    }
    return 0;
}


Saída

A saída consistirá de várias linhas de acordo com as impressões da pilha e remoções que são informadas na entrada.
Sempre após as impressões salte uma linha.
(Na exibição da pilha, entre cada elemento, deixe um espaço em branco para separá-los. Após o último elemento, salte uma linha sem deixar espaço em branco.)



Exemplo

Entrada: 
E 10
E 20
E 30
M
E 40
E 50
M
D
M
D
M
D
D
M
E 60
E 70
M
D
M
D
M
D
M
D
M

Saída: 
30 20 10
50 40 30 20 10
[50]
40 30 20 10
[40]
30 20 10
[30]
[20]
10
70 60 10
[70]
60 10
[60]
10
[10]